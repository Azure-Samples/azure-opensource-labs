{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "13047252956749146466"
    }
  },
  "parameters": {
    "name": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "networkPlugin": "kubenet",
    "networkPolicy": "calico"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('rg-{0}', parameters('name'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "acrDeploy",
      "resourceGroup": "[format('rg-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('acr{0}', toLower(parameters('name')))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "sku": {
            "value": "Basic"
          },
          "adminUserEnabled": {
            "value": true
          },
          "managedIdentityType": {
            "value": "SystemAssigned"
          },
          "publicNetworkAccess": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "7705023819657141328"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard",
              "metadata": {
                "description": "Defaults to Standard"
              },
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ]
            },
            "managedIdentityType": {
              "type": "string",
              "metadata": {
                "description": "Two options are available: SystemAssigned or UserAssigned"
              },
              "allowedValues": [
                "SystemAssigned",
                "UserAssigned"
              ]
            },
            "userAssignedIdentities": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Required when managed identity type is set to UserAssigned"
              }
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "anonymousPullEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "publicNetworkAccess": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2022-02-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "identity": {
                "type": "[parameters('managedIdentityType')]",
                "userAssignedIdentities": "[if(not(equals(parameters('managedIdentityType'), 'SystemAssigned')), parameters('userAssignedIdentities'), null())]"
              },
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]",
                "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                "publicNetworkAccess": "[if(parameters('publicNetworkAccess'), 'Enabled', 'Disabled')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('name')))]"
      ]
    },
    {
      "condition": "[not(equals(variables('networkPlugin'), 'kubenet'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "nsgDeploy",
      "resourceGroup": "[format('rg-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('nsg-{0}', parameters('name'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "1999590623990495398"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              },
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('name')))]"
      ]
    },
    {
      "condition": "[not(equals(variables('networkPlugin'), 'kubenet'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "vnetDeploy",
      "resourceGroup": "[format('rg-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('vnet-{0}', parameters('name'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "vnetAddressPrefix": {
            "value": "10.21.0.0/16"
          },
          "snetName": {
            "value": "[format('snet-{0}', parameters('name'))]"
          },
          "snetAddressPrefix": {
            "value": "10.21.0.0/24"
          },
          "networkSecurityGroupId": "[if(not(equals(variables('networkPlugin'), 'kubenet')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'nsgDeploy'), '2020-10-01').outputs.id.value), createObject('value', ''))]",
          "dnsServer": {
            "value": ""
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "15425725799144943157"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "vnetAddressPrefix": {
              "type": "string"
            },
            "snetAddressPrefix": {
              "type": "string"
            },
            "snetName": {
              "type": "string"
            },
            "networkSecurityGroupId": {
              "type": "string"
            },
            "dnsServer": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "dhcpOptions": "[if(not(empty(parameters('dnsServer'))), createObject('dnsServers', createArray(parameters('dnsServer'))), json('null'))]",
                "subnets": [
                  {
                    "name": "[parameters('snetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('snetAddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[parameters('networkSecurityGroupId')]"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "subnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('name'))).subnets[0].id]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'nsgDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('name')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "lawDeploy",
      "resourceGroup": "[format('rg-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('law-{0}', parameters('name'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "13952838326740707361"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "retentionInDays": 30,
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('name')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "aksDeploy",
      "resourceGroup": "[format('rg-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('aks-{0}', parameters('name'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "slaTier": {
            "value": "Free"
          },
          "managedIdentityType": {
            "value": "SystemAssigned"
          },
          "kubernetesVersion": {
            "value": "1.24.3"
          },
          "networkPlugin": {
            "value": "[variables('networkPlugin')]"
          },
          "networkPolicy": {
            "value": "[variables('networkPolicy')]"
          },
          "loadBalancerSku": {
            "value": "Standard"
          },
          "outboundType": {
            "value": "loadBalancer"
          },
          "dnsServiceIP": {
            "value": "10.0.0.10"
          },
          "podCidrs": {
            "value": [
              "10.244.0.0/16"
            ]
          },
          "serviceCidrs": {
            "value": [
              "10.0.0.0/16"
            ]
          },
          "ipFamilies": {
            "value": [
              "IPv4"
            ]
          },
          "defenderEnabled": {
            "value": false
          },
          "imageCleanerEnabled": {
            "value": false
          },
          "systemNodeCount": {
            "value": 2
          },
          "systemNodeVmSize": {
            "value": "Standard_D2s_v5"
          },
          "registryName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'acrDeploy'), '2020-10-01').outputs.name.value]"
          },
          "vnetSubnetID": "[if(not(equals(variables('networkPlugin'), 'kubenet')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2020-10-01').outputs.subnetId.value), createObject('value', ''))]",
          "logAnalyticsWorkspaceResourceID": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'lawDeploy'), '2020-10-01').outputs.id.value]"
          },
          "nodeTaints": {
            "value": [
              "CriticalAddonsOnly=true:NoSchedule"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "1971024003376138648"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "slaTier": {
              "type": "string",
              "defaultValue": "Free",
              "metadata": {
                "description": "Defaults to Free tier"
              },
              "allowedValues": [
                "Free",
                "Paid"
              ]
            },
            "managedIdentityType": {
              "type": "string",
              "defaultValue": "SystemAssigned",
              "metadata": {
                "description": "Two options are available: SystemAssigned or UserAssigned"
              },
              "allowedValues": [
                "SystemAssigned",
                "UserAssigned"
              ]
            },
            "userAssignedIdentities": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Required when managed identity type is set to UserAssigned"
              }
            },
            "kubernetesVersion": {
              "type": "string",
              "defaultValue": "1.24.3",
              "metadata": {
                "description": "Default is 1.24.3"
              }
            },
            "defenderEnabled": {
              "type": "bool"
            },
            "imageCleanerEnabled": {
              "type": "bool"
            },
            "imageCleanerIntervalHours": {
              "type": "int",
              "defaultValue": 12
            },
            "systemNodeCount": {
              "type": "int",
              "defaultValue": 3
            },
            "systemNodeVmSize": {
              "type": "string",
              "defaultValue": "Standard_D2s_v5",
              "metadata": {
                "description": "Default system node pool size is Standard_D2s_v5"
              }
            },
            "registryName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional parameter to attach AKS cluster to an existing ACR"
              }
            },
            "networkPlugin": {
              "type": "string",
              "defaultValue": "kubenet",
              "metadata": {
                "description": "Network plugin used for building the Kubernetes network."
              },
              "allowedValues": [
                "kubenet",
                "azure",
                "none"
              ]
            },
            "networkPolicy": {
              "type": "string",
              "defaultValue": "calico",
              "metadata": {
                "description": "Network policy used for building the Kubernetes network."
              },
              "allowedValues": [
                "calico",
                "azure"
              ]
            },
            "loadBalancerSku": {
              "type": "string",
              "defaultValue": "Standard",
              "metadata": {
                "description": "The default is standard."
              },
              "allowedValues": [
                "Standard",
                "Basic"
              ]
            },
            "dnsServiceIP": {
              "type": "string",
              "defaultValue": "10.0.0.10",
              "metadata": {
                "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
              }
            },
            "dockerBridgeCidr": {
              "type": "string",
              "defaultValue": "172.17.0.1/16",
              "metadata": {
                "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
              }
            },
            "outboundType": {
              "type": "string",
              "defaultValue": "loadBalancer",
              "metadata": {
                "description": "This can only be set at cluster creation time and cannot be changed later."
              },
              "allowedValues": [
                "loadBalancer",
                "managedNATGateway",
                "userAssignedNATGateway",
                "userDefinedRouting"
              ]
            },
            "podCidrs": {
              "type": "array",
              "defaultValue": [
                "10.244.0.0/16"
              ],
              "metadata": {
                "description": "One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."
              }
            },
            "serviceCidrs": {
              "type": "array",
              "defaultValue": [
                "10.0.0.0/16"
              ],
              "metadata": {
                "description": "One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges."
              }
            },
            "ipFamilies": {
              "type": "array",
              "defaultValue": [
                "IPv4"
              ],
              "allowedValues": [
                "IPv4",
                "IPv6"
              ]
            },
            "vnetSubnetID": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "If the cluster is using azure network plugin, then you can pass in the subnet resource ID like this `vnet.outputs.subnetId`; otherwise, leave it empty"
              }
            },
            "logAnalyticsWorkspaceResourceID": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enable container insights"
              }
            },
            "nodeTaints": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Enable nodeTaints on the system node pool (e.g., ['CriticalAddonsOnly=true:NoSchedule'])"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2022-07-02-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Basic",
                "tier": "[parameters('slaTier')]"
              },
              "identity": {
                "type": "[parameters('managedIdentityType')]",
                "userAssignedIdentities": "[if(equals(parameters('managedIdentityType'), 'UserAssigned'), parameters('userAssignedIdentities'), null())]"
              },
              "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[parameters('name')]",
                "networkProfile": {
                  "networkPlugin": "[parameters('networkPlugin')]",
                  "networkPolicy": "[parameters('networkPolicy')]",
                  "loadBalancerSku": "[parameters('loadBalancerSku')]",
                  "dnsServiceIP": "[parameters('dnsServiceIP')]",
                  "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
                  "outboundType": "[parameters('outboundType')]",
                  "podCidrs": "[parameters('podCidrs')]",
                  "serviceCidrs": "[parameters('serviceCidrs')]",
                  "ipFamilies": "[parameters('ipFamilies')]"
                },
                "agentPoolProfiles": [
                  {
                    "name": "system",
                    "count": "[parameters('systemNodeCount')]",
                    "vmSize": "[parameters('systemNodeVmSize')]",
                    "mode": "System",
                    "vnetSubnetID": "[if(empty(parameters('vnetSubnetID')), null(), parameters('vnetSubnetID'))]",
                    "nodeTaints": "[if(empty(parameters('nodeTaints')), null(), parameters('nodeTaints'))]"
                  }
                ],
                "securityProfile": {
                  "defender": {
                    "securityMonitoring": {
                      "enabled": "[parameters('defenderEnabled')]"
                    }
                  },
                  "imageCleaner": {
                    "enabled": "[parameters('imageCleanerEnabled')]",
                    "intervalHours": "[parameters('imageCleanerIntervalHours')]"
                  }
                },
                "addonProfiles": "[if(not(empty(parameters('logAnalyticsWorkspaceResourceID'))), createObject('omsagent', createObject('config', createObject('logAnalyticsWorkspaceResourceID', parameters('logAnalyticsWorkspaceResourceID')), 'enabled', true())), json('null'))]"
              }
            },
            {
              "condition": "[not(equals(parameters('registryName'), ''))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('registryName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('name')), parameters('registryName'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('name'))).identityProfile.kubeletidentity.objectId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('name')), resourceGroup().id)]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('name')), '2022-07-02-preview', 'full').identity.principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'acrDeploy')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'lawDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "armNodePoolsDeploy",
      "resourceGroup": "[format('rg-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "managedClusterName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'aksDeploy'), '2020-10-01').outputs.name.value]"
          },
          "userNodes": {
            "value": [
              {
                "name": "arm64",
                "mode": "User",
                "vmSize": "Standard_D4pds_v5",
                "enableAutoScaling": true,
                "scaleDownMode": "Delete",
                "minCount": 0,
                "maxCount": 2,
                "type": "VirtualMachineScaleSets",
                "osDiskType": "Ephemeral",
                "nodeTaints": "",
                "vnetSubnetID": "[if(not(equals(variables('networkPlugin'), 'kubenet')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2020-10-01').outputs.subnetId.value, '')]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "8932975478892682483"
            }
          },
          "parameters": {
            "managedClusterName": {
              "type": "string"
            },
            "userNodes": {
              "type": "array"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "userNodePools",
                "count": "[length(range(0, length(parameters('userNodes'))))]"
              },
              "type": "Microsoft.ContainerService/managedClusters/agentPools",
              "apiVersion": "2022-07-02-preview",
              "name": "[format('{0}/{1}', parameters('managedClusterName'), parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].name)]",
              "properties": {
                "vmSize": "[parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].vmSize]",
                "mode": "[parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].mode]",
                "enableAutoScaling": "[parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].enableAutoScaling]",
                "count": "[if(contains(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]], 'maxCount'), parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].maxCount, 1)]",
                "minCount": "[if(and(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].enableAutoScaling, contains(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]], 'minCount')), parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].minCount, null())]",
                "maxCount": "[if(and(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].enableAutoScaling, contains(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]], 'maxCount')), parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].maxCount, null())]",
                "scaleDownMode": "[if(and(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].enableAutoScaling, contains(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]], 'scaleDownMode')), parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].scaleDownMode, null())]",
                "nodeTaints": "[if(empty(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].nodeTaints), null(), parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].nodeTaints)]",
                "type": "[parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].type]",
                "osDiskType": "[parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].osDiskType]",
                "vnetSubnetID": "[if(empty(parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].vnetSubnetID), null(), parameters('userNodes')[range(0, length(parameters('userNodes')))[copyIndex()]].vnetSubnetID)]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'aksDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('name'))), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    }
  ]
}