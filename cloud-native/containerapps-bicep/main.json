{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.1-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
    "_EXPERIMENTAL_FEATURES_ENABLED": [
      "Extensibility"
    ],
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "6079429815466806129"
    }
  },
  "parameters": {
    "resourceGroup": {
      "type": "string",
      "defaultValue": "my-container-apps"
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    }
  },
  "resources": {
    "rg": {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroup')]",
      "location": "[parameters('location')]"
    },
    "containerapp": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-containerapp', parameters('resourceGroup'))]",
      "resourceGroup": "[parameters('resourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "6415831136297108826"
            }
          },
          "parameters": {
            "env_name": {
              "type": "string",
              "defaultValue": "my-environment"
            },
            "app_name": {
              "type": "string",
              "defaultValue": "my-container-app"
            },
            "app_image": {
              "type": "string",
              "defaultValue": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "roleAssignmentAcrPull": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
            "logAnalyticsWorkspaceName": "[format('{0}-logs', parameters('env_name'))]"
          },
          "resources": {
            "managedIdentity": {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            "containerRegistry": {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2019-05-01",
              "name": "[format('acr{0}', variables('rand'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            "roleAssignmentAcr": {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('acr{0}', variables('rand')))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', format('acr{0}', variables('rand'))), variables('roleAssignmentAcrPull'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleAssignmentAcrPull'))]",
                "principalId": "[reference('managedIdentity').principalId]"
              },
              "dependsOn": [
                "containerRegistry",
                "managedIdentity"
              ]
            },
            "logAnalyticsWorkspace": {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-03-01-preview",
              "name": "[variables('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1
                },
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            "environment": {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2022-06-01-preview",
              "name": "[parameters('env_name')]",
              "location": "[parameters('location')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName')), '2020-03-01-preview').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName')), '2020-03-01-preview').primarySharedKey]"
                  }
                }
              },
              "dependsOn": [
                "logAnalyticsWorkspace"
              ]
            },
            "app": {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2022-06-01-preview",
              "name": "my-container-app",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name)))]": {}
                }
              },
              "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('env_name'))]",
                "configuration": {
                  "ingress": {
                    "external": true,
                    "targetPort": 80
                  },
                  "registries": [
                    {
                      "server": "[format('acr{0}.azurecr.io', variables('rand'))]",
                      "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]"
                    }
                  ]
                },
                "template": {
                  "containers": [
                    {
                      "image": "[parameters('app_image')]",
                      "name": "[parameters('app_name')]",
                      "resources": {
                        "cpu": "[json('0.5')]",
                        "memory": "1.0Gi"
                      }
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              },
              "dependsOn": [
                "environment",
                "managedIdentity"
              ]
            }
          }
        }
      },
      "dependsOn": [
        "rg"
      ]
    },
    "postgresKeyvault": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-postgres-keyvault', parameters('resourceGroup'))]",
      "resourceGroup": "[parameters('resourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "11396058816082532653"
            }
          },
          "parameters": {
            "administratorLogin": {
              "type": "string",
              "defaultValue": "username"
            },
            "administratorLoginPassword": {
              "type": "securestring",
              "defaultValue": "[newGuid()]"
            },
            "firewallRuleIp": {
              "type": "string",
              "defaultValue": "127.0.0.1"
            },
            "storageSizeGb": {
              "type": "int",
              "defaultValue": 256
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "postgresName": "[format('postgres-{0}', variables('rand'))]",
            "secretName": "[format('postgres-{0}-password', variables('rand'))]",
            "secretValue": "[parameters('administratorLoginPassword')]"
          },
          "resources": {
            "managedIdentity": {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            "keyVault": {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[format('keyvault{0}', variables('rand'))]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                },
                "accessPolicies": [
                  {
                    "objectId": "[reference('managedIdentity').principalId]",
                    "permissions": {
                      "secrets": [
                        "all"
                      ]
                    },
                    "tenantId": "[subscription().tenantId]"
                  }
                ]
              },
              "dependsOn": [
                "managedIdentity"
              ]
            },
            "keyVaultSecret": {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', format('keyvault{0}', variables('rand')), variables('secretName'))]",
              "properties": {
                "value": "[variables('secretValue')]"
              },
              "dependsOn": [
                "keyVault"
              ]
            },
            "postgres": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('postgresName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "administratorLogin": {
                    "value": "[parameters('administratorLogin')]"
                  },
                  "administratorLoginPassword": {
                    "value": "[parameters('administratorLoginPassword')]"
                  },
                  "firewallRuleIp": {
                    "value": "[parameters('firewallRuleIp')]"
                  },
                  "storageSizeGb": {
                    "value": "[parameters('storageSizeGb')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.1-experimental",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
                    "_EXPERIMENTAL_FEATURES_ENABLED": [
                      "Extensibility"
                    ],
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "12327318265168493266"
                    }
                  },
                  "parameters": {
                    "administratorLogin": {
                      "type": "string",
                      "defaultValue": "username"
                    },
                    "administratorLoginPassword": {
                      "type": "securestring",
                      "defaultValue": "[newGuid()]"
                    },
                    "firewallRuleIp": {
                      "type": "string",
                      "defaultValue": "127.0.0.1"
                    },
                    "storageSizeGb": {
                      "type": "int",
                      "defaultValue": 256
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "variables": {
                    "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
                    "postgresName": "[format('postgres-{0}', variables('rand'))]"
                  },
                  "resources": {
                    "postgres": {
                      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
                      "apiVersion": "2021-06-01",
                      "name": "[variables('postgresName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard_B2s",
                        "tier": "Burstable"
                      },
                      "properties": {
                        "version": "13",
                        "administratorLogin": "[parameters('administratorLogin')]",
                        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                        "storage": {
                          "storageSizeGB": "[parameters('storageSizeGb')]"
                        },
                        "backup": {
                          "backupRetentionDays": 7,
                          "geoRedundantBackup": "Disabled"
                        },
                        "highAvailability": {
                          "mode": "Disabled"
                        }
                      }
                    },
                    "postgresFirewallRule": {
                      "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', variables('postgresName'), 'DefaultAllowRule')]",
                      "properties": {
                        "endIpAddress": "[parameters('firewallRuleIp')]",
                        "startIpAddress": "[parameters('firewallRuleIp')]"
                      },
                      "dependsOn": [
                        "postgres"
                      ]
                    }
                  },
                  "outputs": {
                    "postgresName": {
                      "type": "string",
                      "value": "[variables('postgresName')]"
                    },
                    "postgresUrl": {
                      "type": "string",
                      "value": "[format('postgres://{0}:$PGPASSWORD@{1}.postgres.database.azure.com/postgres?sslmode=require', parameters('administratorLogin'), variables('postgresName'))]"
                    }
                  }
                }
              }
            }
          },
          "outputs": {
            "postgresName": {
              "type": "string",
              "value": "[variables('postgresName')]"
            },
            "postgresUrl": {
              "type": "string",
              "value": "[format('postgres://{0}:$PGPASSWORD@{1}.postgres.database.azure.com/postgres?sslmode=require', parameters('administratorLogin'), variables('postgresName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "rg"
      ]
    }
  }
}