{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "2425950444497852506"
    }
  },
  "parameters": {
    "resourceGroup": {
      "type": "string",
      "defaultValue": "220600-keda"
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "deployScript": {
      "type": "bool",
      "defaultValue": false
    },
    "scriptUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure-Samples/azure-opensource-labs/aks-bicep/cloud-native/aks-bicep/01-aks/deploy-script-keda.sh"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroup')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-aks', parameters('resourceGroup'))]",
      "resourceGroup": "[parameters('resourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "18144758763544616596"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "clusterName": {
              "type": "string",
              "defaultValue": ""
            },
            "nodeCount": {
              "type": "int",
              "defaultValue": 1
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "standard_d2s_v3"
            },
            "kubernetesVersion": {
              "type": "string",
              "defaultValue": "1.23.5"
            }
          },
          "variables": {
            "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "clusterName_var": "[if(not(equals(parameters('clusterName'), '')), parameters('clusterName'), 'aks1')]",
            "roleDefinitionId": {
              "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "AcrPull": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
              "StorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
              "ServiceBusDataOwner": "090c5cfd-751d-490a-894a-3ce6f1109419",
              "KubernetesServiceClusterUserRole": "4abbcc35-e782-43d8-92c5-2d3f1bd2253f"
            },
            "roleAssignmentAcrDefinition": "AcrPull",
            "roleAssignmentStorageAccountDefinition": "StorageBlobDataContributor",
            "roleAssignmentServiceBusDefinition": "ServiceBusDataOwner",
            "roleAssignmentDeploymentContributorDefinition": "Contributor"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2021-05-01",
              "name": "[variables('clusterName_var')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name)))]": {}
                }
              },
              "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[variables('clusterName_var')]",
                "enableRBAC": true,
                "agentPoolProfiles": [
                  {
                    "name": "pool0",
                    "count": "[parameters('nodeCount')]",
                    "vmSize": "[parameters('vmSize')]",
                    "mode": "System"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]"
              ]
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2019-05-01",
              "name": "[format('acr{0}', variables('rand'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[format('storage{0}', variables('rand'))]",
              "location": "[parameters('location')]",
              "kind": "BlockBlobStorage",
              "sku": {
                "name": "Premium_LRS"
              }
            },
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('servicebus{0}', variables('rand'))]",
              "location": "[parameters('location')]",
              "sku": {
                "capacity": 1,
                "name": "Standard",
                "tier": "Standard"
              },
              "properties": {
                "disableLocalAuth": false
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('acr{0}', variables('rand')))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', format('acr{0}', variables('rand'))), variables('roleAssignmentAcrDefinition'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentAcrDefinition')])]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName_var'))).identityProfile.kubeletidentity.objectId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName_var'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', format('acr{0}', variables('rand')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('storage{0}', variables('rand')))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', variables('rand'))), variables('roleAssignmentStorageAccountDefinition'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentStorageAccountDefinition')])]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))).principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName_var'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', variables('rand')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.ServiceBus/namespaces/{0}', format('servicebus{0}', variables('rand')))]",
              "name": "[guid(resourceId('Microsoft.ServiceBus/namespaces', format('servicebus{0}', variables('rand'))), variables('roleAssignmentServiceBusDefinition'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentServiceBusDefinition')])]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))).principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName_var'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', format('servicebus{0}', variables('rand')))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity-deploy', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name)), variables('roleAssignmentDeploymentContributorDefinition'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentDeploymentContributorDefinition')])]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name))).principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName_var'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroup'))]"
      ]
    },
    {
      "condition": "[parameters('deployScript')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-deployscript', parameters('resourceGroup'))]",
      "resourceGroup": "[parameters('resourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "scriptUri": {
            "value": "[parameters('scriptUri')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "3319430997479182691"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]"
            },
            "scriptUri": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {
            "roleDefinitionId": {
              "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
            },
            "roleAssignmentDeploymentContributorDefinition": "Contributor"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity-deploy', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name)), variables('roleAssignmentDeploymentContributorDefinition'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentDeploymentContributorDefinition')])]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name))).principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "deploy-script",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name)))]": {}
                }
              },
              "properties": {
                "environmentVariables": [
                  {
                    "name": "RESOURCE_GROUP",
                    "value": "[parameters('resourceGroupName')]"
                  },
                  {
                    "name": "AKS_NAME",
                    "value": "aks1"
                  },
                  {
                    "name": "NAMESPACE",
                    "value": "keda-http"
                  }
                ],
                "forceUpdateTag": "[parameters('utcValue')]",
                "azCliVersion": "2.28.0",
                "timeout": "PT30M",
                "primaryScriptUri": "[parameters('scriptUri')]",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-deploy', resourceGroup().name))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroup')), 'Microsoft.Resources/deployments', format('{0}-aks', parameters('resourceGroup')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroup'))]"
      ]
    }
  ]
}