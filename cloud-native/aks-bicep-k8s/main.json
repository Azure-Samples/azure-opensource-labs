{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.1-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
    "_EXPERIMENTAL_FEATURES_ENABLED": [
      "Extensibility"
    ],
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "8744504821534446077"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "aks1"
    },
    "namespace": {
      "type": "string",
      "defaultValue": "default"
    },
    "deployCluster": {
      "type": "bool",
      "defaultValue": true
    }
  },
  "resources": {
    "aksCluster": {
      "existing": true,
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2023-05-01",
      "name": "[parameters('clusterName')]"
    },
    "aks": {
      "condition": "[parameters('deployCluster')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-aks', resourceGroup().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "187541002047123827"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "clusterName": {
              "type": "string",
              "defaultValue": "aks1"
            },
            "nodeCount": {
              "type": "int",
              "defaultValue": 1
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "standard_d2s_v5"
            },
            "kubernetesVersion": {
              "type": "string",
              "defaultValue": "1.29"
            }
          },
          "variables": {
            "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "roleDefinitionId": {
              "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "AcrPull": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
              "StorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
              "KubernetesServiceClusterUserRole": "4abbcc35-e782-43d8-92c5-2d3f1bd2253f"
            },
            "roleAssignmentAcrDefinition": "AcrPull",
            "roleAssignmentStorageAccountDefinition": "StorageBlobDataContributor"
          },
          "resources": {
            "managedIdentity": {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            "aks": {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2021-05-01",
              "name": "[parameters('clusterName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name)))]": {}
                }
              },
              "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[parameters('clusterName')]",
                "enableRBAC": true,
                "agentPoolProfiles": [
                  {
                    "name": "nodepool1",
                    "count": "[parameters('nodeCount')]",
                    "vmSize": "[parameters('vmSize')]",
                    "mode": "System"
                  }
                ]
              },
              "dependsOn": [
                "managedIdentity"
              ]
            },
            "containerRegistry": {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2019-05-01",
              "name": "[format('acr{0}', variables('rand'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            "storageAccount": {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[format('storage{0}', variables('rand'))]",
              "location": "[parameters('location')]",
              "kind": "BlockBlobStorage",
              "sku": {
                "name": "Premium_LRS"
              }
            },
            "roleAssignmentAcr": {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('acr{0}', variables('rand')))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', format('acr{0}', variables('rand'))), variables('roleAssignmentAcrDefinition'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentAcrDefinition')])]",
                "principalId": "[reference('aks').identityProfile.kubeletidentity.objectId]"
              },
              "dependsOn": [
                "aks",
                "containerRegistry"
              ]
            },
            "roleAssignmentStorageAccount": {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('storage{0}', variables('rand')))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', variables('rand'))), variables('roleAssignmentStorageAccountDefinition'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentStorageAccountDefinition')])]",
                "principalId": "[reference('managedIdentity').principalId]"
              },
              "dependsOn": [
                "aks",
                "managedIdentity",
                "storageAccount"
              ]
            }
          }
        }
      }
    },
    "app": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-app', resourceGroup().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "kubeConfig": {
            "value": "[listClusterAdminCredential(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2023-05-01').kubeconfigs[0].value]"
          },
          "namespace": {
            "value": "[parameters('namespace')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "1578784578022569032"
            }
          },
          "parameters": {
            "kubeConfig": {
              "type": "securestring"
            },
            "namespace": {
              "type": "string",
              "defaultValue": "default"
            }
          },
          "imports": {
            "kubernetes": {
              "provider": "Kubernetes",
              "version": "1.0.0",
              "config": {
                "namespace": "[parameters('namespace')]",
                "kubeConfig": "[parameters('kubeConfig')]"
              }
            }
          },
          "resources": {
            "appsDeployment_azureVoteBack": {
              "import": "kubernetes",
              "type": "apps/Deployment@v1",
              "properties": {
                "metadata": {
                  "name": "azure-vote-back"
                },
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "azure-vote-back"
                    }
                  },
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "azure-vote-back"
                      }
                    },
                    "spec": {
                      "nodeSelector": {
                        "kubernetes.io/os": "linux"
                      },
                      "containers": [
                        {
                          "name": "azure-vote-back",
                          "image": "mcr.microsoft.com/oss/bitnami/redis:6.0.8",
                          "env": [
                            {
                              "name": "ALLOW_EMPTY_PASSWORD",
                              "value": "yes"
                            }
                          ],
                          "resources": {
                            "requests": {
                              "cpu": "100m",
                              "memory": "128Mi"
                            },
                            "limits": {
                              "cpu": "250m",
                              "memory": "256Mi"
                            }
                          },
                          "ports": [
                            {
                              "containerPort": 6379,
                              "name": "redis"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "coreService_azureVoteBack": {
              "import": "kubernetes",
              "type": "core/Service@v1",
              "properties": {
                "metadata": {
                  "name": "azure-vote-back"
                },
                "spec": {
                  "ports": [
                    {
                      "port": 6379
                    }
                  ],
                  "selector": {
                    "app": "azure-vote-back"
                  }
                }
              }
            },
            "appsDeployment_azureVoteFront": {
              "import": "kubernetes",
              "type": "apps/Deployment@v1",
              "properties": {
                "metadata": {
                  "name": "azure-vote-front"
                },
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "azure-vote-front"
                    }
                  },
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "azure-vote-front"
                      }
                    },
                    "spec": {
                      "nodeSelector": {
                        "kubernetes.io/os": "linux"
                      },
                      "containers": [
                        {
                          "name": "azure-vote-front",
                          "image": "mcr.microsoft.com/azuredocs/azure-vote-front:v1",
                          "resources": {
                            "requests": {
                              "cpu": "100m",
                              "memory": "128Mi"
                            },
                            "limits": {
                              "cpu": "250m",
                              "memory": "256Mi"
                            }
                          },
                          "ports": [
                            {
                              "containerPort": 80
                            }
                          ],
                          "env": [
                            {
                              "name": "REDIS",
                              "value": "azure-vote-back"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "coreService_azureVoteFront": {
              "import": "kubernetes",
              "type": "core/Service@v1",
              "properties": {
                "metadata": {
                  "name": "azure-vote-front"
                },
                "spec": {
                  "type": "LoadBalancer",
                  "ports": [
                    {
                      "port": 80
                    }
                  ],
                  "selector": {
                    "app": "azure-vote-front"
                  }
                }
              }
            }
          },
          "outputs": {
            "frontendIp": {
              "type": "string",
              "value": "[reference('coreService_azureVoteFront').status.loadBalancer.ingress[0].ip]"
            }
          }
        }
      },
      "dependsOn": [
        "aks",
        "aksCluster"
      ]
    }
  },
  "outputs": {
    "lbPublicIp": {
      "type": "string",
      "value": "[reference('app').outputs.frontendIp.value]"
    }
  }
}