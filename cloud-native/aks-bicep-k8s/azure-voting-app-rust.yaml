apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: postgres
        image: postgres:15.0-alpine
        env:
        - name: POSTGRES_PASSWORD
          value: "mypassword"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 5432
          name: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-voting-app-rust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-voting-app-rust
  template:
    metadata:
      labels:
        app: azure-voting-app-rust
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: azure-voting-app-rust
        image: ghcr.io/asw101/azure-voting-app-rust:latest
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_SERVER
          value: "postgres"
        - name: DATABASE_PASSWORD
          value: "mypassword"
        - name: FIRST_VALUE
          value: "Go"
        - name: SECOND_VALUE
          value: "Rust"
---
apiVersion: v1
kind: Service
metadata:
  name: azure-voting-app-rust
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  selector:
    app: azure-voting-app-rust
