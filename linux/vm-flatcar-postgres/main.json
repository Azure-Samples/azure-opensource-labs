{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "16546506825093351762"
    }
  },
  "parameters": {
    "resourceGroup": {
      "type": "string",
      "defaultValue": "my-postgres"
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "firewallRuleIp": {
      "type": "string",
      "defaultValue": "127.0.0.1"
    },
    "sshKey": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroup')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-vm', parameters('resourceGroup'))]",
      "resourceGroup": "[parameters('resourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "allowIpPort22": {
            "value": "[parameters('firewallRuleIp')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "5008762517955484404"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "vmName": {
              "type": "string",
              "defaultValue": "vm1",
              "metadata": {
                "description": "The name of your Virtual Machine."
              }
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_B2s",
              "allowedValues": [
                "Standard_B1ls",
                "Standard_B1s",
                "Standard_B2s",
                "Standard_B1ms",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_D2s_v5",
                "Standard_D4s_v5",
                "Standard_D2ps_v5",
                "Standard_D4ps_v5"
              ],
              "metadata": {
                "description": "The Virtual Machine size."
              }
            },
            "diskAccountType": {
              "type": "string",
              "defaultValue": "Premium_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "UltraSSD_LRS"
              ],
              "metadata": {
                "description": "The Storage Account Type for OS and Data disks."
              }
            },
            "osDiskSize": {
              "type": "int",
              "defaultValue": 256,
              "allowedValues": [
                1024,
                512,
                256,
                128,
                64,
                32
              ],
              "metadata": {
                "description": "The OS Disk size."
              }
            },
            "osImage": {
              "type": "string",
              "defaultValue": "flatcar-container-linux",
              "allowedValues": [
                "flatcar-container-linux"
              ],
              "metadata": {
                "description": "The OS image for the VM."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the VNET."
              }
            },
            "allowIpPort22": {
              "type": "string",
              "defaultValue": "127.0.0.1",
              "metadata": {
                "description": "Default IP to allow Port 22 (SSH). Set to your own IP Address."
              }
            },
            "adminUsername": {
              "type": "string",
              "defaultValue": "azureuser",
              "metadata": {
                "description": "Username for the Virtual Machine."
              }
            },
            "sshKey": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "SSH Key for the Virtual Machine."
              }
            },
            "userData": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "User data for deployment."
              }
            },
            "customData": {
              "type": "string",
              "defaultValue": "ignition",
              "allowedValues": [
                "ignition",
                "none"
              ],
              "metadata": {
                "description": "Deploy with ignition."
              }
            },
            "env": {
              "type": "secureObject",
              "defaultValue": {},
              "metadata": {
                "description": "Environment variables as JSON object."
              }
            }
          },
          "variables": {
            "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "vnetName": "[if(not(equals(parameters('virtualNetworkName'), '')), parameters('virtualNetworkName'), format('{0}-vnet', resourceGroup().name))]",
            "subnetName": "default",
            "keyData": "[if(not(equals(parameters('sshKey'), '')), parameters('sshKey'), 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3gkRpKwprN00sT7yekr0xO0F+uTllDua02puhu1v0zGu3aENvUsygBHJiTy+flgrO2q3mY9F5/D67+WHDeSpr5s71UtnbzMxTams89qmo+raTm+IqjzdNujaWf0/pbT6JUkQq0fR0BfIvg3/7NTXhlzjmCOP2EpD91LzN6b5jAm/5hXr0V5mcpERo8kk2GWxjKmwmDOV+huH1DIFDpMxT3WzR2qvZp1DZbNSYmKkrite3FHlPGLXA1I3bRQT+iTj8vRGpxOPSiMdPK4RNMEZVXSGQ3OZbSl2FBCbd/tdJ1idKo8/ZCkHxdh9/em28/yfPUK0D164shgiEdIkdOQJv')]",
            "publicIPAddressName": "[format('{0}-ip', parameters('vmName'))]",
            "networkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
            "ipConfigName": "[format('{0}-ipconfig', parameters('vmName'))]",
            "subnetAddressPrefix": "10.1.0.0/24",
            "addressPrefix": "10.1.0.0/16",
            "customDataIgnition": "{\n  \"ignition\": {\n    \"version\": \"3.3.0\"\n  },\n  \"storage\": {\n    \"files\": [\n      {\n        \"contents\": {\n          \"compression\": \"\",\n          \"source\": \"data:,%7B0%7D\"\n        },\n        \"group\": {\n          \"id\": 501\n        },\n        \"mode\": 420,\n        \"path\": \"/home/azureuser/env.json\",\n        \"user\": {\n          \"id\": 500\n        }\n      }\n    ]\n  },\n  \"systemd\": {\n    \"units\": [\n      {\n        \"contents\": \"[Unit]\\nDescription=NGINX example\\nAfter=docker.service\\nRequire=docker.service\\n[Service]\\nTimeoutStartSec=0\\nExecStartPre=-/usr/bin/docker rm --force nginx1\\nExecStart=/usr/bin/docker run --name nginx1 --pull always --net host docker.io/nginx:1\\nExecStop=/usr/bin/docker stop nginx1\\nRestart=always\\nRestartSec=5s\\n[Install]\\nWantedBy=multi-user.target\\n\",\n        \"enabled\": true,\n        \"name\": \"nginx.service\"\n      }\n    ]\n  }\n}\n",
            "customDataIgnitionFormat": "[replace(variables('customDataIgnition'), '%7B0%7D', uriComponent(string(parameters('env'))))]",
            "kvCustomData": {
              "none": null,
              "ignition": "[base64(variables('customDataIgnitionFormat'))]"
            },
            "kvImageReference": {
              "flatcar-container-linux": {
                "publisher": "kinvolk",
                "offer": "flatcar-container-linux-free",
                "sku": "stable-gen2",
                "version": "latest"
              }
            },
            "nsgSecurityRulesBase": [
              {
                "name": "Port_22",
                "properties": {
                  "priority": 100,
                  "protocol": "Tcp",
                  "access": "Allow",
                  "direction": "Inbound",
                  "sourceAddressPrefix": "[parameters('allowIpPort22')]",
                  "sourcePortRange": "*",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "22"
                }
              },
              {
                "name": "Port_80",
                "properties": {
                  "protocol": "*",
                  "sourcePortRange": "*",
                  "destinationPortRange": "80",
                  "sourceAddressPrefix": "Internet",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 110,
                  "direction": "Inbound"
                }
              },
              {
                "name": "Port_443",
                "properties": {
                  "protocol": "*",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "Internet",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 120,
                  "direction": "Inbound"
                }
              },
              {
                "name": "Port_8080",
                "properties": {
                  "protocol": "*",
                  "sourcePortRange": "*",
                  "destinationPortRange": "8080",
                  "sourceAddressPrefix": "Internet",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 130,
                  "direction": "Inbound"
                }
              },
              {
                "name": "Port_41641",
                "properties": {
                  "protocol": "Udp",
                  "sourcePortRange": "*",
                  "destinationPortRange": "41641",
                  "sourceAddressPrefix": "Internet",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 140,
                  "direction": "Inbound"
                }
              }
            ],
            "nsgSecurityRules": "[variables('nsgSecurityRulesBase')]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-05-01",
              "name": "[variables('networkInterfaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "[variables('ipConfigName')]",
                    "properties": {
                      "subnet": {
                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/virtualNetworks/{2}/subnets/{3}', subscription().subscriptionId, resourceGroup().name, variables('vnetName'), variables('subnetName'))]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', resourceGroup().name))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', resourceGroup().name))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}-nsg', resourceGroup().name)]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": "[variables('nsgSecurityRules')]"
              }
            },
            {
              "condition": "[equals(parameters('virtualNetworkName'), '')]",
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-05-01",
              "name": "[variables('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('addressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('subnetAddressPrefix')]",
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "10.1.1.0/26",
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-05-01",
              "name": "[variables('publicIPAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                  "domainNameLabel": "[toLower(format('{0}-{1}', parameters('vmName'), variables('rand')))]"
                }
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-11-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name)))]": {}
                }
              },
              "plan": {
                "name": "stable-gen2",
                "product": "flatcar-container-linux-free",
                "publisher": "kinvolk"
              },
              "properties": {
                "userData": "[parameters('userData')]",
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "managedDisk": {
                      "storageAccountType": "[parameters('diskAccountType')]"
                    },
                    "name": "[format('{0}-osdisk1', parameters('vmName'))]",
                    "diskSizeGB": "[parameters('osDiskSize')]",
                    "createOption": "FromImage"
                  },
                  "imageReference": "[variables('kvImageReference')[parameters('osImage')]]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "customData": "[variables('kvCustomData')[parameters('customData')]]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "keyData": "[variables('keyData')]",
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]"
                        }
                      ]
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              ]
            }
          ],
          "outputs": {
            "adminUsername": {
              "type": "string",
              "value": "[parameters('adminUsername')]"
            },
            "hostname": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2021-05-01').dnsSettings.fqdn]"
            },
            "sshCommand": {
              "type": "string",
              "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2021-05-01').dnsSettings.fqdn)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-postgres', parameters('resourceGroup'))]",
      "resourceGroup": "[parameters('resourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "firewallRuleIp": {
            "value": "[parameters('firewallRuleIp')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "17782720627283437608"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "firewallRuleIp": {
              "type": "string",
              "defaultValue": "127.0.0.1"
            },
            "size": {
              "type": "string",
              "defaultValue": "small",
              "allowedValues": [
                "small",
                "medium"
              ]
            }
          },
          "variables": {
            "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "postgresName": "[format('postgres-{0}', variables('rand'))]",
            "sizeMap": {
              "small": {
                "sku": {
                  "name": "Standard_B1ms",
                  "tier": "Burstable"
                },
                "storageSizeGB": 128
              },
              "medium": {
                "sku": {
                  "name": "Standard_B2s",
                  "tier": "Burstable"
                },
                "storageSizeGB": 256
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('{0}-identity', resourceGroup().name)]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2022-12-01",
              "name": "[variables('postgresName')]",
              "location": "[parameters('location')]",
              "sku": "[variables('sizeMap')[parameters('size')].sku]",
              "properties": {
                "version": "15",
                "storage": {
                  "storageSizeGB": "[variables('sizeMap')[parameters('size')].storageSizeGB]"
                },
                "backup": {
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                },
                "authConfig": {
                  "activeDirectoryAuth": "Enabled",
                  "passwordAuth": "Disabled",
                  "tenantId": "[subscription().tenantId]"
                }
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', variables('postgresName'), 'DefaultAllowRule')]",
              "properties": {
                "endIpAddress": "[parameters('firewallRuleIp')]",
                "startIpAddress": "[parameters('firewallRuleIp')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgresName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "postgres-admin",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "postgresName": {
                    "value": "[variables('postgresName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name)), '2018-11-30').principalId]"
                  },
                  "principalName": {
                    "value": "[format('{0}-identity', resourceGroup().name)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "9620970338207014434"
                    }
                  },
                  "parameters": {
                    "postgresName": {
                      "type": "string"
                    },
                    "principalName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DBforPostgreSQL/flexibleServers/administrators",
                      "apiVersion": "2022-12-01",
                      "name": "[format('{0}/{1}', parameters('postgresName'), parameters('principalId'))]",
                      "properties": {
                        "principalName": "[parameters('principalName')]",
                        "principalType": "ServicePrincipal",
                        "tenantId": "[subscription().tenantId]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]",
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgresName'))]"
              ]
            }
          ],
          "outputs": {
            "postgresName": {
              "type": "string",
              "value": "[variables('postgresName')]"
            },
            "postgresUrl": {
              "type": "string",
              "value": "[format('postgres://$PGUSER:$PGPASSWORD@{0}.postgres.database.azure.com/postgres?sslmode=require', variables('postgresName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroup'))]"
      ]
    }
  ]
}