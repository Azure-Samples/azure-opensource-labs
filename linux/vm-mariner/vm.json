{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "15024671018336532028"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "description": "The name of your Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues": [
        "Standard_B1ls",
        "Standard_B1s",
        "Standard_B2s",
        "Standard_B1ms",
        "Standard_B2ms",
        "Standard_B4ms",
        "Standard_D2s_v5",
        "Standard_D4s_v5",
        "Standard_D2ps_v5",
        "Standard_D4ps_v5",
        "Standard_NC4as_T4_v3",
        "Standard_NC6s_v3",
        "Standard_NC24ads_A100_v4"
      ],
      "metadata": {
        "description": "The Virtual Machine size."
      }
    },
    "diskAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "The Storage Account Type for OS and Data disks."
      }
    },
    "osDiskSize": {
      "type": "int",
      "defaultValue": 256,
      "allowedValues": [
        1024,
        512,
        256,
        128,
        64,
        32
      ],
      "metadata": {
        "description": "The OS Disk size."
      }
    },
    "osImage": {
      "type": "string",
      "defaultValue": "mariner-gen2",
      "allowedValues": [
        "mariner-gen2",
        "mariner-gen1",
        "mariner-arm"
      ],
      "metadata": {
        "description": "The OS image for the VM."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the VNET."
      }
    },
    "allowIpPort22": {
      "type": "string",
      "defaultValue": "127.0.0.1",
      "metadata": {
        "description": "Default IP to allow Port 22 (SSH). Set to your own IP Address."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "sshKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "SSH Key for the Virtual Machine."
      }
    },
    "userData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "User data for deployment."
      }
    },
    "customData": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "cloud-init",
        "none"
      ],
      "metadata": {
        "description": "Deploy with cloud-init."
      }
    },
    "env": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "Environment variables as JSON object."
      }
    }
  },
  "variables": {
    "rand": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
    "vnetName": "[if(not(equals(parameters('virtualNetworkName'), '')), parameters('virtualNetworkName'), format('{0}-vnet', resourceGroup().name))]",
    "subnetName": "default",
    "keyData": "[if(not(equals(parameters('sshKey'), '')), parameters('sshKey'), 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3gkRpKwprN00sT7yekr0xO0F+uTllDua02puhu1v0zGu3aENvUsygBHJiTy+flgrO2q3mY9F5/D67+WHDeSpr5s71UtnbzMxTams89qmo+raTm+IqjzdNujaWf0/pbT6JUkQq0fR0BfIvg3/7NTXhlzjmCOP2EpD91LzN6b5jAm/5hXr0V5mcpERo8kk2GWxjKmwmDOV+huH1DIFDpMxT3WzR2qvZp1DZbNSYmKkrite3FHlPGLXA1I3bRQT+iTj8vRGpxOPSiMdPK4RNMEZVXSGQ3OZbSl2FBCbd/tdJ1idKo8/ZCkHxdh9/em28/yfPUK0D164shgiEdIkdOQJv')]",
    "publicIPAddressName": "[format('{0}-ip', parameters('vmName'))]",
    "networkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
    "ipConfigName": "[format('{0}-ipconfig', parameters('vmName'))]",
    "subnetAddressPrefix": "10.1.0.0/24",
    "addressPrefix": "10.1.0.0/16",
    "customDataCloudInit": "#cloud-config\n# vim: syntax=yaml\n\nwrite_files:\n- path: /home/azureuser/env.json\n  content: {0}\n  encoding: b64\n\nruncmd:\n- cd /home/azureuser/\n- chown -R azureuser:azureuser /home/azureuser/\n- sudo tdnf install -y moby-engine moby-cli ca-certificates\n- sudo systemctl enable docker.service\n- sudo systemctl daemon-reload\n- sudo systemctl start docker.service\n- sudo -u azureuser echo $(date) > hello.txt\n",
    "customDataCloudInitFormat": "[format(variables('customDataCloudInit'), base64(string(parameters('env'))))]",
    "kvCustomData": {
      "none": null,
      "cloud-init": "[base64(variables('customDataCloudInitFormat'))]"
    },
    "kvVmSizeImageReference": {
      "Standard_D2ps_v5": "mariner-arm",
      "Standard_D4ps_v5": "mariner-arm"
    },
    "kvImageReference": {
      "mariner-gen1": {
        "publisher": "MicrosoftCBLMariner",
        "offer": "cbl-mariner",
        "sku": "cbl-mariner-2",
        "version": "latest"
      },
      "mariner-gen2": {
        "publisher": "MicrosoftCBLMariner",
        "offer": "cbl-mariner",
        "sku": "cbl-mariner-2-gen2",
        "version": "latest"
      },
      "mariner-arm": {
        "publisher": "MicrosoftCBLMariner",
        "offer": "cbl-mariner",
        "sku": "cbl-mariner-2-arm64",
        "version": "latest"
      }
    },
    "imageReference": "[if(contains(variables('kvVmSizeImageReference'), parameters('vmSize')), variables('kvImageReference')[variables('kvVmSizeImageReference')[parameters('vmSize')]], variables('kvImageReference')[parameters('osImage')])]",
    "nsgSecurityRulesBase": [
      {
        "name": "Port_22",
        "properties": {
          "priority": 100,
          "protocol": "Tcp",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "[parameters('allowIpPort22')]",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "22"
        }
      },
      {
        "name": "Port_80",
        "properties": {
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "80",
          "sourceAddressPrefix": "Internet",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 110,
          "direction": "Inbound"
        }
      },
      {
        "name": "Port_443",
        "properties": {
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "443",
          "sourceAddressPrefix": "Internet",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 120,
          "direction": "Inbound"
        }
      },
      {
        "name": "Port_8080",
        "properties": {
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "8080",
          "sourceAddressPrefix": "Internet",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 130,
          "direction": "Inbound"
        }
      },
      {
        "name": "Port_41641",
        "properties": {
          "protocol": "Udp",
          "sourcePortRange": "*",
          "destinationPortRange": "41641",
          "sourceAddressPrefix": "Internet",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 140,
          "direction": "Inbound"
        }
      }
    ],
    "nsgSecurityRules": "[variables('nsgSecurityRulesBase')]",
    "roleDefinitionId": {
      "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
      "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
      "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
      "AcrPull": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
      "StorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
    },
    "roleAssignmentStorageAccountDefinition": "StorageBlobDataContributor"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[format('{0}-identity', resourceGroup().name)]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('ipConfigName')]",
            "properties": {
              "subnet": {
                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/virtualNetworks/{2}/subnets/{3}', subscription().subscriptionId, resourceGroup().name, variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', resourceGroup().name))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', resourceGroup().name))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}-nsg', resourceGroup().name)]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[variables('nsgSecurityRules')]"
      }
    },
    {
      "condition": "[equals(parameters('virtualNetworkName'), '')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "10.1.1.0/26",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(format('{0}-{1}', parameters('vmName'), variables('rand')))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name)))]": {}
        }
      },
      "properties": {
        "userData": "[parameters('userData')]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "managedDisk": {
              "storageAccountType": "[parameters('diskAccountType')]"
            },
            "name": "[format('{0}-osdisk1', parameters('vmName'))]",
            "diskSizeGB": "[parameters('osDiskSize')]",
            "createOption": "FromImage"
          },
          "imageReference": "[variables('imageReference')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "customData": "[variables('kvCustomData')[parameters('customData')]]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('keyData')]",
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[format('storage{0}', variables('rand'))]",
      "location": "[parameters('location')]",
      "kind": "BlockBlobStorage",
      "sku": {
        "name": "Premium_LRS"
      },
      "properties": {
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('storage{0}', variables('rand')))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', variables('rand'))), variables('roleAssignmentStorageAccountDefinition'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId')[variables('roleAssignmentStorageAccountDefinition')])]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name)), '2018-11-30').principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', resourceGroup().name))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', variables('rand')))]"
      ]
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "hostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2021-05-01').dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2021-05-01').dnsSettings.fqdn)]"
    }
  }
}